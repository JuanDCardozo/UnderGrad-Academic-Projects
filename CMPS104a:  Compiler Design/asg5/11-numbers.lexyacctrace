Starting parse
Entering state 0
Reducing stack by rule 7 (line 55):
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
<command-line>:0:2: warning: missing whitespace after the macro name [enabled by default]
--accepting rule at line 63 ("# 1 "11-numbers.oc"")
--included # 1 "11-numbers.oc"
--accepting rule at line 65 ("
")
--accepting rule at line 63 ("# 1 "<built-in>"")
--included # 1 "<built-in>"
--accepting rule at line 65 ("
")
--accepting rule at line 63 ("# 1 "<command-line>"")
--included # 1 "<command-line>"
--accepting rule at line 65 ("
")
--accepting rule at line 63 ("# 1 "11-numbers.oc"")
--included # 1 "11-numbers.oc"
--accepting rule at line 65 ("
")
--accepting rule at line 65 ("
")
--accepting rule at line 65 ("
")
--accepting rule at line 63 ("# 1 "oclib.oh" 1")
--included # 1 "oclib.oh"
--accepting rule at line 65 ("
")
--accepting rule at line 63 ("# 28 "oclib.oh"")
--included # 28 "oclib.oh"
--accepting rule at line 65 ("
")
--accepting rule at line 84 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 77):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("__assert_fail")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 88 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 79):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 28 64
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("expr")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 64
Entering state 100
Reducing stack by rule 23 (line 112):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 65
Reading a token: --accepting rule at line 74 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 102
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 88 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 79):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 28 65 102
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("file")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 65 102
Entering state 133
Reducing stack by rule 24 (line 113):
   $1 = nterm params ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
Deleting astree (0x840c80->{',' 5.28.32 ",":)
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 65
Reading a token: --accepting rule at line 74 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 102
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 87 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 78):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 65 102
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("line")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 65 102
Entering state 133
Reducing stack by rule 24 (line 113):
   $1 = nterm params ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
Deleting astree (0x840c80->{',' 5.28.45 ",":)
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 65
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 21 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x840c80->{')' 5.28.55 ")":)
Deleting astree (0x8411f0->{';' 5.28.56 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 84 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 77):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("putb")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 87 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 78):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 64
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("b")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 64
Entering state 100
Reducing stack by rule 23 (line 112):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 65
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 21 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x841670->{')' 5.29.17 ")":)
Deleting astree (0x841730->{';' 5.29.18 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 84 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 77):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 87 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 78):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 64
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("c")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 64
Entering state 100
Reducing stack by rule 23 (line 112):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 65
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 21 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x841af0->{')' 5.30.17 ")":)
Deleting astree (0x841bb0->{';' 5.30.18 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 84 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 77):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 87 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 78):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 64
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("i")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 64
Entering state 100
Reducing stack by rule 23 (line 112):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 65
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 21 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x841f90->{')' 5.31.17 ")":)
Deleting astree (0x842050->{';' 5.31.18 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 84 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 77):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("puts")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 88 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 79):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 28 64
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("s")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 64
Entering state 100
Reducing stack by rule 23 (line 112):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 65
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 21 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x842410->{')' 5.32.20 ")":)
Deleting astree (0x8424d0->{';' 5.32.21 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 84 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 77):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("endl")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 129
Reducing stack by rule 19 (line 84):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x842750->{')' 5.33.12 ")":)
Deleting astree (0x8427e0->{';' 5.33.13 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 87 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 78):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("getc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 129
Reducing stack by rule 19 (line 84):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x842ad0->{')' 5.34.11 ")":)
Deleting astree (0x842b60->{';' 5.34.12 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 88 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 79):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("getw")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 129
Reducing stack by rule 19 (line 84):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x842da0->{')' 5.35.14 ")":)
Deleting astree (0x842e30->{';' 5.35.15 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 88 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 79):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("getln")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 129
Reducing stack by rule 19 (line 84):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x843070->{')' 5.36.15 ")":)
Deleting astree (0x843100->{';' 5.36.16 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 88 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 16 (line 79):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 100 ("[]")
Next token is token TOK_ARRAY ()
Shifting token TOK_ARRAY ()
Entering state 61
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("getargv")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 96
Reducing stack by rule 25 (line 117):
   $1 = nterm basetype ()
   $2 = token TOK_ARRAY ()
   $3 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 129
Reducing stack by rule 19 (line 84):
   $1 = nterm identdecl ()
   $2 = token '(' ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x8434d0->{')' 5.37.19 ")":)
Deleting astree (0x843560->{';' 5.37.20 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 84 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 77):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("exit")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 64
Reading a token: --accepting rule at line 87 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 78):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 64
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("status")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 64
Entering state 100
Reducing stack by rule 23 (line 112):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm params ()
Stack now 0 2 28
Entering state 65
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 101
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 131
Reducing stack by rule 21 (line 97):
   $1 = nterm identdecl ()
   $2 = nterm params ()
   $3 = token ')' ()
   $4 = token ';' ()
Deleting astree (0x843900->{')' 5.38.22 ")":)
Deleting astree (0x8439c0->{';' 5.38.23 ";":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 51):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 63 ("# 4 "11-numbers.oc" 2")
--included # 4 "11-numbers.oc"
--accepting rule at line 65 ("
")
--accepting rule at line 65 ("
")
--accepting rule at line 87 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 15 (line 78):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 62
Reducing stack by rule 26 (line 119):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 76 ("=")
Next token is token '=' ()
Shifting token '=' ()
Entering state 63
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 113 ("1")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 16
Reducing stack by rule 74 (line 246):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 28 63
Entering state 41
Reducing stack by rule 62 (line 193):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 28 63
Entering state 97
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 128
Reducing stack by rule 38 (line 143):
   $1 = nterm identdecl ()
   $2 = token '=' ()
   $3 = nterm expr ()
   $4 = token ';' ()
Deleting astree (0x843d40->{';' 6.5.15 ";":)
-> $$ = nterm vardecl ()
Stack now 0 2
Entering state 32
Reducing stack by rule 32 (line 135):
   $1 = nterm vardecl ()
-> $$ = nterm stmt ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm stmt ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 92 ("while")
Next token is token TOK_WHILE ()
Shifting token TOK_WHILE ()
Entering state 10
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 45
Reading a token: --accepting rule at line 112 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 46
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 109 (">")
Next token is token TOK_GT ()
Reducing stack by rule 71 (line 232):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 45
Entering state 40
Reducing stack by rule 61 (line 192):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 45
Entering state 86
Next token is token TOK_GT ()
Shifting token TOK_GT ()
Entering state 72
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 113 ("0")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 16
Reducing stack by rule 74 (line 246):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 10 45 86 72
Entering state 41
Reducing stack by rule 62 (line 193):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 72
Entering state 107
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 49 (line 178):
   $1 = nterm expr ()
   $2 = token TOK_GT ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 10 45
Entering state 86
Next token is token ')' ()
Shifting token ')' ()
Entering state 119
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 71 ("{")
Next token is token '{' ()
Shifting token '{' ()
Entering state 24
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 64 ("   ")
--accepting rule at line 112 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 53
Reading a token: --accepting rule at line 112 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 46
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 71 (line 232):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 45 86 119 24 15 53
Entering state 40
Reducing stack by rule 61 (line 192):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 119 24 15 53
Entering state 94
Next token is token ')' ()
Reducing stack by rule 69 (line 223):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 10 45 86 119 24
Entering state 39
Next token is token ')' ()
Shifting token ')' ()
Entering state 83
Reducing stack by rule 68 (line 219):
   $1 = nterm exprs ()
   $2 = token ')' ()
Deleting astree (0x844490->{')' 6.7.16 ")":)
-> $$ = nterm call ()
Stack now 0 2 10 45 86 119 24
Entering state 38
Reducing stack by rule 60 (line 191):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 119 24
Entering state 36
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 82
Reducing stack by rule 36 (line 139):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x844490->{';' 6.7.17 ";":)
-> $$ = nterm stmt ()
Stack now 0 2 10 45 86 119 24
Entering state 60
Reducing stack by rule 29 (line 130):
   $1 = token '{' ()
   $2 = nterm stmt ()
-> $$ = nterm body ()
Stack now 0 2 10 45 86 119
Entering state 30
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 64 ("   ")
--accepting rule at line 112 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 53
Reading a token: --accepting rule at line 114 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 17
Reducing stack by rule 75 (line 247):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 10 45 86 119 30 15 53
Entering state 41
Reducing stack by rule 62 (line 193):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 119 30 15 53
Entering state 94
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 69 (line 223):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2 10 45 86 119 30
Entering state 39
Next token is token ')' ()
Shifting token ')' ()
Entering state 83
Reducing stack by rule 68 (line 219):
   $1 = nterm exprs ()
   $2 = token ')' ()
Deleting astree (0x8446a0->{')' 6.8.14 ")":)
-> $$ = nterm call ()
Stack now 0 2 10 45 86 119 30
Entering state 38
Reducing stack by rule 60 (line 191):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 119 30
Entering state 36
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 82
Reducing stack by rule 36 (line 139):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x8446a0->{';' 6.8.15 ";":)
-> $$ = nterm stmt ()
Stack now 0 2 10 45 86 119 30
Entering state 67
Reducing stack by rule 30 (line 131):
   $1 = nterm body ()
   $2 = nterm stmt ()
-> $$ = nterm body ()
Stack now 0 2 10 45 86 119
Entering state 30
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 64 ("   ")
--accepting rule at line 112 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 76 ("=")
Next token is token '=' ()
Reducing stack by rule 71 (line 232):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 45 86 119 30
Entering state 40
Reducing stack by rule 61 (line 192):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 119 30
Entering state 36
Next token is token '=' ()
Shifting token '=' ()
Entering state 74
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 46
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 77 ("+")
Next token is token '+' ()
Reducing stack by rule 71 (line 232):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 45 86 119 30 36 74
Entering state 40
Reducing stack by rule 61 (line 192):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 119 30 36 74
Entering state 109
Next token is token '+' ()
Shifting token '+' ()
Entering state 75
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 112 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 46
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Reducing stack by rule 71 (line 232):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 45 86 119 30 36 74 109 75
Entering state 40
Reducing stack by rule 61 (line 192):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 119 30 36 74 109 75
Entering state 110
Next token is token ';' ()
Reducing stack by rule 51 (line 180):
   $1 = nterm expr ()
   $2 = token '+' ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 119 30 36 74
Entering state 109
Next token is token ';' ()
Reducing stack by rule 44 (line 173):
   $1 = nterm expr ()
   $2 = token '=' ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 10 45 86 119 30
Entering state 36
Next token is token ';' ()
Shifting token ';' ()
Entering state 82
Reducing stack by rule 36 (line 139):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x844a10->{';' 6.9.28 ";":)
-> $$ = nterm stmt ()
Stack now 0 2 10 45 86 119 30
Entering state 67
Reducing stack by rule 30 (line 131):
   $1 = nterm body ()
   $2 = nterm stmt ()
-> $$ = nterm body ()
Stack now 0 2 10 45 86 119
Entering state 30
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 72 ("}")
Next token is token '}' ()
Shifting token '}' ()
Entering state 66
Reducing stack by rule 28 (line 125):
   $1 = nterm body ()
   $2 = token '}' ()
Deleting astree (0x844a10->{'}' 6.10.1 "}":)
-> $$ = nterm block ()
Stack now 0 2 10 45 86 119
Entering state 29
Reducing stack by rule 31 (line 134):
   $1 = nterm block ()
-> $$ = nterm stmt ()
Stack now 0 2 10 45 86 119
Entering state 136
Reducing stack by rule 39 (line 149):
   $1 = token TOK_WHILE ()
   $2 = token '(' ()
   $3 = nterm expr ()
   $4 = token ')' ()
   $5 = nterm stmt ()
Deleting astree (0x843e40->{'(' 6.6.7 "(":)
Deleting astree (0x844120->{')' 6.6.18 ")":)
-> $$ = nterm while ()
Stack now 0 2
Entering state 33
Reducing stack by rule 33 (line 136):
   $1 = nterm while ()
-> $$ = nterm stmt ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm stmt ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 112 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 53
Reading a token: --accepting rule at line 112 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 46
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 71 (line 232):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 15 53
Entering state 40
Reducing stack by rule 61 (line 192):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 15 53
Entering state 94
Next token is token ')' ()
Reducing stack by rule 69 (line 223):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2
Entering state 39
Next token is token ')' ()
Shifting token ')' ()
Entering state 83
Reducing stack by rule 68 (line 219):
   $1 = nterm exprs ()
   $2 = token ')' ()
Deleting astree (0x844bc0->{')' 6.11.13 ")":)
-> $$ = nterm call ()
Stack now 0 2
Entering state 38
Reducing stack by rule 60 (line 191):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 36
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 82
Reducing stack by rule 36 (line 139):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x844bc0->{';' 6.11.14 ";":)
-> $$ = nterm stmt ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm stmt ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--accepting rule at line 112 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 64 (" ")
--accepting rule at line 67 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 53
Reading a token: --accepting rule at line 114 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 17
Reducing stack by rule 75 (line 247):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 15 53
Entering state 41
Reducing stack by rule 62 (line 193):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 15 53
Entering state 94
Reading a token: --accepting rule at line 68 (")")
Next token is token ')' ()
Reducing stack by rule 69 (line 223):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm exprs ()
Stack now 0 2
Entering state 39
Next token is token ')' ()
Shifting token ')' ()
Entering state 83
Reducing stack by rule 68 (line 219):
   $1 = nterm exprs ()
   $2 = token ')' ()
Deleting astree (0x844d70->{')' 6.12.11 ")":)
-> $$ = nterm call ()
Stack now 0 2
Entering state 38
Reducing stack by rule 60 (line 191):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 36
Reading a token: --accepting rule at line 73 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 82
Reducing stack by rule 36 (line 139):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0x844d70->{';' 6.12.12 ";":)
-> $$ = nterm stmt ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 52):
   $1 = nterm program ()
   $2 = nterm stmt ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 65 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 47):
   $1 = nterm program ()
-> $$ = nterm start ()
Stack now 0
Entering state 1
Now at end of input.
Shifting token $end ()
Entering state 3
Stack now 0 1 3
Cleanup: popping token $end ()
Cleanup: popping nterm start ()
