#define __OCLIB_C__
#include "oclib.oh"void __ocmain (void) {
        char* s1 = ;
        char* s2 = ;
        char* s3 = ;
        char* s4 = ;
        char* s5 = ;
        char* s6 = ;
        char* s7 = ;
        char* s8 = ;
        char* s9 = ;
        char* s10 = ;
        char* s11 = ;
        char* s12 = (;
        char* s13 = (;
        char* s14 = (;
        char* s15 = ;
        char* s16 = (;
puts __puts
src __src
unknown a1src ( puts __puts );
puts __puts
to __to
unknown a2to ( puts __puts );
puts __puts
dst __dst
unknown a3dst ( puts __puts );
ndisks __ndisks
int i1

        
        if (!) goto fi_6_14_15;
        ndisks __ndisks
        int i2
fi_6_14_15:;
towers __towers
ndisks _ _ndisks
int i3

src __src
dst __dst
tmp __tmp
unknown a4tmp ( towers __towers, , src __src, dst __dst );
move __move
src __src
dst __dst
unknown a5dst ( move __move, src __src );
towers __towers
ndisks __ndisks
int i4

tmp __tmp
src __src
dst __dst
unknown a6dst ( towers __towers, , tmp __tmp, src __src );
towers __towers
int i5
Source __Source
Temporary __Temporary
Destination __Destination
unknown a7Destination ( towers __towers, i5, Source __Source, Temporary __Temporary );
puts __puts
src __src
unknown a8src ( puts __puts );
puts __puts
to __to
unknown a9to ( puts __puts );
puts __puts
dst __dst
unknown a10dst ( puts __puts );
ndisks __ndisks
int i6

        
        if (!) goto fi_6_14_15;
        ndisks __ndisks
        int i7
fi_6_14_15:;
towers __towers
ndisks _ _ndisks
int i8

src __src
dst __dst
tmp __tmp
unknown a11tmp ( towers __towers, , src __src, dst __dst );
move __move
src __src
dst __dst
unknown a12dst ( move __move, src __src );
towers __towers
ndisks __ndisks
int i9

tmp __tmp
src __src
dst __dst
unknown a13dst ( towers __towers, , tmp __tmp, src __src );
towers __towers
int i10
Source __Source
Temporary __Temporary
Destination __Destination
unknown a14Destination ( towers __towers, i10, Source __Source, Temporary __Temporary );
puts __puts
src __src
unknown a15src ( puts __puts );
puts __puts
to __to
unknown a16to ( puts __puts );
puts __puts
dst __dst
unknown a17dst ( puts __puts );
ndisks __ndisks
int i11

        
        if (!) goto fi_6_14_15;
        ndisks __ndisks
        int i12
fi_6_14_15:;
towers __towers
ndisks _ _ndisks
int i13

src __src
dst __dst
tmp __tmp
unknown a18tmp ( towers __towers, , src __src, dst __dst );
move __move
src __src
dst __dst
unknown a19dst ( move __move, src __src );
towers __towers
ndisks __ndisks
int i14

tmp __tmp
src __src
dst __dst
unknown a20dst ( towers __towers, , tmp __tmp, src __src );
towers __towers
int i15
Source __Source
Temporary __Temporary
Destination __Destination
unknown a21Destination ( towers __towers, i15, Source __Source, Temporary __Temporary );
puts __puts
src __src
unknown a22src ( puts __puts );
puts __puts
to __to
unknown a23to ( puts __puts );
puts __puts
dst __dst
unknown a24dst ( puts __puts );
ndisks __ndisks
int i16

        
        if (!) goto fi_6_14_15;
        ndisks __ndisks
        int i17
fi_6_14_15:;
towers __towers
ndisks _ _ndisks
int i18

src __src
dst __dst
tmp __tmp
unknown a25tmp ( towers __towers, , src __src, dst __dst );
move __move
src __src
dst __dst
unknown a26dst ( move __move, src __src );
towers __towers
ndisks __ndisks
int i19

tmp __tmp
src __src
dst __dst
unknown a27dst ( towers __towers, , tmp __tmp, src __src );
towers __towers
int i20
Source __Source
Temporary __Temporary
Destination __Destination
unknown a28Destination ( towers __towers, i20, Source __Source, Temporary __Temporary );
}
__void towers(
        int _0_ndisks,
        string _0_src,
        string _0_tmp,
        string _0_dst)
{
ndisks __ndisks
int i21

        
        if (!) goto fi_6_14_15;
        ndisks __ndisks
        int i22
fi_6_14_15:;
towers __towers
ndisks _ _ndisks
int i23

src __src
dst __dst
tmp __tmp
unknown a29tmp ( towers __towers, , src __src, dst __dst );
move __move
src __src
dst __dst
unknown a30dst ( move __move, src __src );
towers __towers
ndisks __ndisks
int i24

tmp __tmp
src __src
dst __dst
unknown a31dst ( towers __towers, , tmp __tmp, src __src );
}
